{% include 'general_rules.jinja' with context %}

<INSTRUCTIONS>

    Your job is to complete the TASK described by the TASK-DESCRIPTION by implementing changes to the ORIGINAL-SOURCE-CODE.
    The ORIGINAL-SOURCE-CODE is part of a larger project. You can see only the relevant parts of the code here.

    The changes required have already been planned, you can find them in the IMPLEMENTATION-PLAN block. Always follow
    the IMPLEMENTATION-PLAN with your code changes.

    Please ALWAYS honor ALL of these rules specific to your current job:

    - ALWAYS write clean, human-readable code.
    - Make ONLY the changes necessary to implement the TASK.
    - Do NOT make any changes unrelated to the TASK.
    - Do NOT remove any existing code or comments unrelated to the TASK.
    - UPDATE any existing comments related to the TASK to match the modified code.
    - Remove existing comments ONLY if they are invalidated by implementing the TASK.
    - NEVER use placeholders, ALWAYS write out the full code.
    - PRESERVE all code and comments not need to be changed to implement the TASK.
    - NEVER delete any code or comment lines unrelated to your changes.
    - MAKE SURE to change the code CONSISTENTLY. If you make changes to an interface, class, struct,
    - ADD the necessary using statements at the top to import the namespaces used by any newly added code.
    method or variable signature, then MAKE SURE to adjust ALL of its uses consistently!

    Respond only the code blocks you need to make changes to. Preserve the marker before each of the code blocks.

    Your RESPONSE must contain consecutive code blocks, each of them preceeded with a "Path:" line in the same order
    as the ORIGINAL-SOURCE-CODE. You must write any modified code in their corresponding code blocks. You may skip
    code blocks corresponding to original source files you do not need to change to implement the code changes
    required to implement the TASK.

    You may introduce new source file(s) as needed by a "New:" line with the new file's solution relative path and
    a subsequent code block with the full contents of the newly created source file. It is similar to the "Path:"
    lines and subsequent code blocks in the ORIGINAL-SOURCE-CODE, but marks the file as "New:" instead of "Path:".
    New files can only be introduced after the changes to the existing files, therefore "New:" blocks can only
    be placed after the "Path:" blocks.

    To delete a source file leave its corresponding code block empty.

    If you skip a source file it will remain unmodified.

    You can modify or delete only these files (paths):

    {% for path in source_paths %}
        - `{{ path }}`
    {% endfor %}

    Introduce new files only if really needed. For new files use the file naming convention matching the paths
    of the .NET Core solution files.

    Write each modified or new file only once, then finish your response.

</INSTRUCTIONS>

<TASK-DESCRIPTION>

    {{ task.description }}

</TASK-DESCRIPTION>

<IMPLEMENTATION-PLAN>

    {{ task.plan }}

</IMPLEMENTATION-PLAN>

<ORIGINAL-SOURCE-CODE>

    {% for source in task.sources %}

        {% set doc = source.document %}
        {% set hunk = source.relevant %}
        {% set path = doc.path %}
        {% set code_block = hunk.code_block %}
        {% include 'code_block.jinja' with context %}

    {% endfor %}

</ORIGINAL-SOURCE-CODE>

Take a deep breath and write your RESPONSE implementing the changes to the original source code required to accomplish the TASK.
